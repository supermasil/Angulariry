{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'signup', component: SignupComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes) // Lazy loading, will merge with root eventually\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule{}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    FormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy{\n  private authStatusSub: Subscription;\n  isLoading = false;\n  constructor(public authService: AuthService) {}\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf='isLoading'></mat-spinner>\n  <form (submit)='onLogin(loginForm)' #loginForm='ngForm' *ngIf='!isLoading'>\n    <mat-form-field>\n      <input\n      matInput\n      type='email'\n      placeholder='Email'\n      name='email'\n      ngModel\n      #emailInput='ngModel'\n      required\n      email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n      type='password'\n      matInput\n      placeholder='Password'\n      name='password'\n      ngModel\n      #passwordInput='ngModel'\n      required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <button mat-raised-button color='accent' type='submit'>Login</button>\n  </form>\n</mat-card>\n<!-- ? check if it's undefined -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit, OnDestroy {\n  constructor(public authService: AuthService) {}\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf='isLoading'></mat-spinner>\n  <form (submit)='onSignup(signupForm)' #signupForm='ngForm' *ngIf='!isLoading'>\n    <mat-form-field>\n      <input\n      matInput\n      type='email'\n      placeholder='Email'\n      name='email'\n      ngModel\n      #emailInput='ngModel'\n      required\n      email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n      type='password'\n      matInput\n      placeholder='Password'\n      name='password'\n      ngModel\n      #passwordInput='ngModel'\n      required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <button mat-raised-button color='accent' type='submit' *ngIf=\"!isLoading\">Signup</button>\n  </form>\n</mat-card>\n<!-- ? check if it's undefined -->\n"],"sourceRoot":"webpack:///"}