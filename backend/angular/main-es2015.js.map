{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/404/404.component.ts","./src/app/404/404.component.html","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/error-interceptor.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/front-page/front-page.component.ts","./src/app/front-page/front-page.component.html","./src/app/front-page/front-page.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create-edit/mime-type.validator.ts","./src/app/posts/post-create-edit/post-create.component.ts","./src/app/posts/post-create-edit/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/post.module.ts","./src/app/posts/post.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html',\n  styleUrls: ['404.component.css']\n})\nexport class Component404 {\n}\n","<div class=\"page_404\">\n  <div class=\"four_zero_four_bg\"></div>\n  <h3>Look like you're lost</h3>\n\t<a href=\"/\" class=\"link_404\">Go back home</a>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input'; // Unlock input material\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon'\n\n@NgModule({\n  // imports: [ // Not needed\n  //   MatInputModule,\n  //   MatCardModule,\n  //   MatButtonModule,\n  //   MatToolbarModule,\n  //   MatExpansionModule,\n  //   MatProgressSpinnerModule,\n  //   MatPaginatorModule,\n  //   MatDialogModule\n  // ],\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatIconModule\n  ]\n})\n\nexport class AngularMaterialModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Router } from '@angular/router';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { PostCreateComponent } from './posts/post-create-edit/post-create.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { Component404 } from './404/404.component';\nimport { FrontPageComponent } from './front-page/front-page.component';\n\nconst routes: Routes = [\n  { path: '', component: FrontPageComponent},\n  { path: 'posts', component: PostListComponent},\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard]},\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard]},\n  { path: \"auth\", loadChildren: () => import(\"./auth/auth.module\").then(module => module.AuthModule)}, // Lazy loading\n  { path: \"404\", component: Component404},\n  { path: \"**\", component: Component404} // Must be last\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\n\nexport class AppRoutingModule {};\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authSerice: AuthService) {}\n  ngOnInit() {\n    this.authSerice.autoAuthUser();\n  }\n\n}\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostModule } from './posts/post.module';\nimport { FrontPageModule } from './front-page/front-page.module';\n// import { AuthModule } from './auth/auth.module'; // Remove to make it lazily loader\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostModule,\n    FrontPageModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ], // For services\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent] // for components that are dynamically created\n})\nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n// Intercepting out going request\n@Injectable() // To inject services to this service\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService){}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({ // Don't modify the original one\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken) // Will add or override, not overwrite\n    });\n\n    return next.handle(authRequest);\n  }\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\n    const isAuth = this.authService.getIsAuth();\n    if(!isAuth) {\n      this.router.navigate([\"/auth/login\"]);\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthData } from './auth-data.model';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL = environment.apiURL + \"/users/\"\n\n@Injectable({ providedIn: 'root'} )\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private tokenTimer: NodeJS.Timer; // Or type Any is fine\n  private authStatusListener = new Subject<boolean>();\n  private userId: string;\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  getUserId (){\n    return this.userId;\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = {email, password};\n    this.http.post<{message: string}>(BACKEND_URL + \"signup\", authData)\n      .subscribe(response => {\n        console.log(response.message);\n        this.router.navigate([\"/\"]);\n      }, err => {\n        console.log(err.error.message);\n        this.authStatusListener.next(false);\n      });\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = {email, password};\n    this.http.post<{token: string, expiresIn: number, userId: string}>(BACKEND_URL + \"login\", authData)\n      .subscribe(response => {\n        this.token = response.token;\n        if (this.token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true); // Notify about login status\n          const expiration = new Date(new Date().getTime() + expiresInDuration * 1000);\n          this.saveAuthData(this.token, expiration, this.userId);\n          this.router.navigate([\"/\"]);\n        }\n      },\n      error => {\n        this.authStatusListener.next(false);\n\n      }\n    );\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.userId = null;\n    this.router.navigate([\"/\"]);\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = new Date(authInformation.expiration).getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.authStatusListener.next(true);\n      this.setAuthTimer(expiresIn / 1000);\n    }\n  }\n\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000)\n  }\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\n    localStorage.setItem(\"userId\", userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiration\");\n    localStorage.removeItem(\"userId\");\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem(\"token\");\n    const expiration = localStorage.getItem(\"expiration\");\n    const userId = localStorage.getItem(\"userId\");\n    if (!token || !expiration) {\n      return;\n    }\n\n    return {\n      token: token,\n      expiration: expiration,\n      userId: userId\n    };\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from './error/error.component';\n\n// Any outgoing requests that return an error will be caught in this class\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialog: MatDialog) {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe (\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = \"Unknown Error Occurred!\"\n        if (error.error.message) {\n          errorMessage = error.error.message\n        }\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n        return throwError(error)\n      })\n    );\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) {}\n}\n","<h1 mat-dialog-title>An Error Occured</h1>\n<div mat-dialog-content>\n  <p class=\"mat-body-1\">{{data.message}}</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-front-page',\n  templateUrl: 'front-page.component.html',\n  styleUrls: ['front-page.component.css']\n})\nexport class FrontPageComponent {\n}\n","<mat-slider min=\"1\" max=\"100\" step=\"1\" value=\"1\">12312</mat-slider>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { FrontPageComponent } from './front-page.component';\n\n@NgModule({\n  declarations: [\n    FrontPageComponent\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    AppRoutingModule\n  ]\n})\nexport class FrontPageModule {\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit, OnDestroy{\n  constructor(private authService: AuthService) {}\n  userIsAuthenticated = false;\n  private authListenerSub: Subscription;\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSub = this.authService.getAuthStatusListener().subscribe(\n      isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      }\n    );\n  }\n\n  onLogOut() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSub.unsubscribe();\n  }\n\n};\n","<mat-toolbar color='primary'>\n  <a routerLink=\"/\">MyMessages</a>\n  <span class=\"spacer\"></span>\n  <ul>\n    <li *ngIf=\"userIsAuthenticated\">\n      <a mat-button routerLink='/create' routerLinkActive=\"mat-accent\">Create</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink='/auth/login' routerLinkActive=\"mat-accent\">Login</a>\n    </li>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink='/auth/signup' routerLinkActive=\"mat-accent\">Signup</a>\n    </li>\n    <li *ngIf=\"userIsAuthenticated\">\n      <a mat-button (click)=\"onLogOut()\">Logout</a>\n    </li>\n  </ul>\n</mat-toolbar>\n\n<mat-toolbar color=\"primary\">\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>My App</span>\n  <span class=\"example-spacer\"></span>\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n    <mat-icon>favorite</mat-icon>\n  </button>\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n    <mat-icon>share</mat-icon>\n  </button>\n</mat-toolbar>\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (\n  control: AbstractControl\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const frObs = Observable.create(\n    (observer: Observer<{ [key: string]: any }>) => {\n      fileReader.addEventListener(\"loadend\", () => {\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n        let header = \"\";\n        let isValid = false;\n        for (let i = 0; i < arr.length; i++) {\n          header += arr[i].toString(16);\n        }\n        switch (header) {\n          case \"89504e47\":\n            isValid = true;\n            break;\n          case \"ffd8ffe0\":\n          case \"ffd8ffe1\":\n          case \"ffd8ffe2\":\n          case \"ffd8ffe3\":\n          case \"ffd8ffe8\":\n            isValid = true;\n            break;\n          default:\n            isValid = false; // Or you can use the blob.type as fallback\n            break;\n        }\n        if (isValid) {\n          observer.next(null);\n        } else {\n          observer.next({ invalidMimeType: true });\n        }\n        observer.complete();\n      });\n      fileReader.readAsArrayBuffer(file);\n    }\n  );\n  return frObs;\n};\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\n\nimport { PostsService } from '../post.service';\nimport { ActivatedRoute } from '@angular/router'; // to get info of the route through params\nimport { Post } from '../post.model';\nimport { mimeType } from \"./mime-type.validator\";\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\n\nexport class PostCreateComponent implements OnInit, OnDestroy{\n  private mode = 'create';\n  private postId: string;\n  post: Post;\n  isLoading = false;\n  form: FormGroup;\n  imagePreview: string;\n  private authStatusSub: Subscription;\n\n\n  constructor(\n    public postsService: PostsService,\n    public route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false; // Remove spinner every time auth status changes\n      }\n    );\n    // Set up form\n    this.form = new FormGroup({\n      title: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]\n      }),\n      content: new FormControl(null, {validators: [Validators.required]}),\n      image: new FormControl(null, {validators: [Validators.required], asyncValidators: [mimeType]})\n    });\n    // Subcribe to see the active route\n    this.route.paramMap.subscribe((paramMap) => {\n      if (paramMap.has('postId')) { // Edit case\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n\n        this.postsService.getPost(this.postId).subscribe(\n          postData => {\n            this.isLoading = false;\n            this.post = {\n              id: postData._id,\n              title: postData.title,\n              content: postData.content,\n              imagePath: postData.imagePath,\n              creator: postData.creator\n            }\n            // Initialize the form\n            this.form.setValue({\n              title: this.post.title,\n              content: this.post.content,\n              image: this.post.imagePath\n            });\n          },\n          err => {\n            this.router.navigate(['/404']);\n          });\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    });\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postsService.addPost(\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image);\n    } else {\n      this.postsService.updatePost(\n        this.postId,\n        this.form.value.title,\n        this.form.value.content,\n        this.form.value.image);\n    }\n    this.form.reset();\n  }\n\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({image: file}); // Target a single control\n    this.form.get('image').updateValueAndValidity(); // Update and validate without html form\n    const reader = new FileReader();\n    reader.onload = () => { // When done loading\n      this.imagePreview = reader.result as string;\n    }\n    reader.readAsDataURL(file); // This will kick off onload process\n  }\n}\n","<mat-slider min=\"1\" max=\"100\" step=\"1\" value=\"1\"></mat-slider>\n\n<mat-card>\n  <mat-spinner *ngIf='isLoading'></mat-spinner>\n  <form [formGroup]='form' (submit)='onSavePost()' *ngIf='!isLoading'>\n    <mat-form-field>\n      <input\n      matInput\n      type='text'\n      formControlName='title'\n      placeholder='Post Title'>\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter a post title</mat-error>\n    </mat-form-field>\n\n    <div>\n      <button mat-stroked-button type='button' (click)='filePicker.click()'>Pick Image</button>\n      <input type=\"file\" #filePicker (change)='onImagePicked($event)'>\n    </div>\n\n    <div class='image-preview' *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\n      <img [src]='imagePreview' [alt]='form.value.title'>\n    </div>\n    <mat-error *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').invalid\">Invalid input type</mat-error>\n\n    <mat-form-field>\n      <textarea\n      matInput\n      rows='10'\n      formControlName='content'\n      placeholder='Post Content'></textarea>\n      <mat-error *ngIf=\"form.get('content').invalid\">Please enter some post content</mat-error>\n    </mat-form-field>\n\n    <button\n      mat-raised-button\n      color='primary'\n      type='submit'>Save Post\n    </button>\n  </form>\n</mat-card>\n<!-- ? check if it's undefined -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Subscription } from 'rxjs';\n\nimport { Post } from '../post.model';\nimport { PostsService } from '../post.service';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\n\nexport class PostListComponent implements OnInit, OnDestroy {\n  posts: Post[] = [];\n  private postsSub: Subscription;\n  private authListenerSub: Subscription;\n  userIsAuthenticated = false;\n  isLoading = false;\n  userId: string;\n  totalPosts = 0;\n  postsPerPage = 5;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  // postsService: PostsService;\n  // constructor(postsService: PostsService) {\n  //   this.postsService = postsService;\n  // }\n  constructor(\n    public postsService: PostsService,\n    private authService: AuthService\n  ) {} // Public simplifies code\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts(this.postsPerPage, 1); // This will update the getPostUpdateListener observable\n    this.postsSub = this.postsService.getPostUpdateListener()\n      .subscribe((postData: {posts: Post[], maxPosts: number}) => {\n        this.isLoading = false;\n        this.posts = postData.posts;\n        this.totalPosts = postData.maxPosts;\n    });\n    this.userIsAuthenticated = this.authService.getIsAuth(); // Get current login status\n    this.userId = this.authService.getUserId();\n    // Since the post list component is loaded after logging in\n    // so this block won't be entered again (no new broadcast)\n    this.authListenerSub = this.authService.getAuthStatusListener().subscribe(\n      isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n        this.userId = this.authService.getUserId();\n      }\n    );\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage); // refetch after deletion\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authListenerSub.unsubscribe();\n  }\n}\n","<mat-spinner *ngIf='isLoading'></mat-spinner>\n<mat-accordion multi='true' *ngIf='posts.length > 0 && !isLoading'>\n  <mat-expansion-panel *ngFor='let post of posts'>\n    <mat-expansion-panel-header>\n      {{ post.title }}\n    </mat-expansion-panel-header>\n    <div class='post-image'>\n      <img [src]='post.imagePath' [alt]='post.title'>\n    </div>\n    <p>{{ post.content }}</p>\n    <mat-action-row *ngIf=\"userIsAuthenticated && userId === post.creator\">\n      <a mat-button color='primary' [routerLink]=\"['/edit', post.id]\" >Edit</a>\n      <button mat-button color='warn' (click)='onDelete(post.id)'>Delete</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n</mat-accordion>\n<mat-paginator [length]='totalPosts' [pageSize]='postsPerPage' [pageSizeOptions]='pageSizeOptions' (page)='onChangedPage($event)'></mat-paginator>\n<p class='info-text mat-body-1' *ngIf='posts.length <= 0 && !isLoading'>No posts added yet</p>\n","import { NgModule } from '@angular/core';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { PostCreateComponent } from './post-create-edit/post-create.component';\n\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { AppRoutingModule } from '../app-routing.module';\n\n@NgModule({\n  declarations: [\n    PostCreateComponent,\n    PostListComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    AppRoutingModule\n  ]\n})\nexport class PostModule {\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { Post } from './post.model';\nimport { Router } from '@angular/router'; // For navigation\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL = environment.apiURL + \"/posts/\"\n\n@Injectable({providedIn: 'root'}) // Or add PostService to providers in app.module\nexport class PostsService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<{posts: Post[], maxPosts: number}>(); // Like an event emitter\n\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  getPosts(postsPerPage: number, currentPage:number) {\n    const queryParams = `?pageSize=${postsPerPage}&currentPage=${currentPage}`;\n    // return [...this.posts]; // ... pulls out the content to make a copy\n    this.httpClient\n      .get<{message: string, posts: any, maxPosts: number}>(BACKEND_URL + queryParams)\n      .pipe(map((postData) => {\n        return {posts: postData.posts.map(post => {\n            return {\n            title: post.title,\n            content: post.content,\n            id: post._id,\n            imagePath: post.imagePath,\n            creator: post.creator\n            }\n          }),\n          maxPosts: postData.maxPosts};\n        })\n      )\n      .subscribe((transformedPosts) => {\n        this.posts = transformedPosts.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          maxPosts: transformedPosts.maxPosts\n        });\n    });\n  }\n\n  getPost(postId: String) {\n    return this.httpClient.get<{\n      _id: string,\n      title: string,\n      content: string,\n      imagePath: string,\n      creator: string}>(BACKEND_URL + postId); // return an observable\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  addPost(title: string, content: string, image: File) {\n    // const post: Post = {id: null, title: title, content: content};\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n    this.httpClient\n      .post<{message: string, post: Post}>(BACKEND_URL, postData)\n      .subscribe((responseData) => {\n        const post: Post = {\n          id: responseData.post.id,\n          title: responseData.post.title,\n          content: responseData.post.content,\n          imagePath: responseData.post.imagePath,\n          creator: responseData.post.creator\n        };\n        console.log(responseData.message);\n        this.posts.push(post);\n        this.router.navigate(['/']); // Will reload, no need to emit\n    });\n\n  }\n\n  deletePost(postId: string) {\n    return this.httpClient.delete(BACKEND_URL + postId);\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof(image) === 'object') {\n      postData = new FormData();\n      postData.append('id', id);\n      postData.append('title', title);\n      postData.append('content', content);\n      postData.append('image', image, title);\n    } else {\n      postData = {\n        id: id,\n        title: title,\n        content: content,\n        imagePath: image,\n        creator: null // Get creator id from auth service to be safe\n      }\n    }\n\n    this.httpClient.put<{message: string, updatedPost: Post}>(BACKEND_URL + id, postData)\n      .subscribe(response => {\n        const updatedPosts = [...this.posts]; // create a copy\n        const oldPostIndex = updatedPosts.findIndex(p => p.id === id);\n        const post: Post = {\n          id: response.updatedPost.id,\n          title: response.updatedPost.title,\n          content: response.updatedPost.content,\n          imagePath: response.updatedPost.imagePath,\n          creator: response.updatedPost.creator\n        }\n        updatedPosts[oldPostIndex] = post;\n        this.posts = updatedPosts;\n        this.router.navigate(['/']); // Will reload, no need to emit\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: \"http://localhost:3000/api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}