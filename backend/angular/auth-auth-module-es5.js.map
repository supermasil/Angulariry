{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html"],"names":["routes","path","component","AuthRoutingModule","forChild","imports","exports","AuthModule","declarations","LoginComponent","authService","isLoading","authStatusSub","unsubscribe","getAuthStatusListener","subscribe","authStatus","form","invalid","login","value","email","password","templateUrl","styleUrls","SignupComponent","createUser"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'signup', component: SignupComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes) // Lazy loading, will merge with root eventually\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule{}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule,\n    FormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy{\n  private authStatusSub: Subscription;\n  isLoading = false;\n  constructor(public authService: AuthService) {}\n\n  ngOnDestroy(): void {\n    this.authStatusSub.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf='isLoading'></mat-spinner>\n  <form (submit)='onLogin(loginForm)' #loginForm='ngForm' *ngIf='!isLoading'>\n    <mat-form-field>\n      <input\n      matInput\n      type='email'\n      placeholder='Email'\n      name='email'\n      ngModel\n      #emailInput='ngModel'\n      required\n      email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n      type='password'\n      matInput\n      placeholder='Password'\n      name='password'\n      ngModel\n      #passwordInput='ngModel'\n      required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <button mat-raised-button color='accent' type='submit'>Login</button>\n  </form>\n</mat-card>\n<!-- ? check if it's undefined -->\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit, OnDestroy {\n  constructor(public authService: AuthService) {}\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-spinner *ngIf='isLoading'></mat-spinner>\n  <form (submit)='onSignup(signupForm)' #signupForm='ngForm' *ngIf='!isLoading'>\n    <mat-form-field>\n      <input\n      matInput\n      type='email'\n      placeholder='Email'\n      name='email'\n      ngModel\n      #emailInput='ngModel'\n      required\n      email>\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input\n      type='password'\n      matInput\n      placeholder='Password'\n      name='password'\n      ngModel\n      #passwordInput='ngModel'\n      required>\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password</mat-error>\n    </mat-form-field>\n    <button mat-raised-button color='accent' type='submit' *ngIf=\"!isLoading\">Signup</button>\n  </form>\n</mat-card>\n<!-- ? check if it's undefined -->\n"]}